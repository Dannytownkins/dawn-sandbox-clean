<style>
.qa-overlay{position:fixed;inset:auto 16px 16px 16px;z-index:9999;background:#0b0b0c;color:#fff;border-radius:12px;padding:12px 14px;box-shadow:0 12px 30px rgba(0,0,0,.35);max-height:50vh;overflow:auto;font:14px/1.4 system-ui, -apple-system, Segoe UI, Roboto, Arial}
.qa-overlay h4{margin:0 0 6px;font-size:14px}
.qa-overlay .ok{color:#86efac}
.qa-overlay .warn{color:#fde047}
.qa-overlay .err{color:#fca5a5}
.qa-overlay details{margin:6px 0}
.qa-overlay summary{cursor:pointer}
</style>
<script>
(function(){
  function param(key){ return new URLSearchParams(location.search).get(key); }
  function accessibleName(el){
    var label = el.getAttribute('aria-label');
    if (label && label.trim()) return label.trim();
    var id = el.getAttribute('aria-labelledby'); if (id){ var t = document.getElementById(id); if(t) return t.textContent.trim(); }
    return (el.textContent||'').trim();
  }
  function hasLabel(input){
    if (input.type==='hidden') return true;
    if (input.closest('[role="presentation"]')) return true;
    if (input.labels && input.labels.length) return true;
    var id = input.id && document.querySelector('label[for="'+CSS.escape(input.id)+'"]');
    return !!id;
  }
  function overlay(html){
    var box = document.createElement('div'); box.className='qa-overlay';
    box.innerHTML = html;
    document.body.appendChild(box);
    return box;
  }
  function audit(){
    var errs=[], warns=[];
    // Images: alt required unless decorative
   document.querySelectorAll('img').forEach(function(img){
      var alt = img.getAttribute('alt');
      var decorative = img.getAttribute('role')==='presentation' || img.getAttribute('aria-hidden')==='true';
      if (alt===null && !decorative) errs.push({t:'img missing alt', el:img});
      if (alt!==null && alt.trim()==='' && !decorative && !img.closest('.icon, svg')) warns.push({t:'img empty alt (verify decorative)', el:img});
    });
    // Buttons/links need an accessible name
    document.querySelectorAll('a, button, [role="button"]').forEach(function(el){
      if (el.tabIndex < 0) return;
      if (el.matches('a') && (!el.getAttribute('href') || el.getAttribute('href')==='#')) warns.push({t:'link with empty/placeholder href', el});
      var name = accessibleName(el);
      if (!name) errs.push({t:'interactive control without accessible name', el});
    });
    // Inputs should have labels
    document.querySelectorAll('input, select, textarea').forEach(function(i){
      if (!hasLabel(i)) warns.push({t:'form control without associated <label>', el:i});
    });
    // Headings: at least one H1, warn if multiple
    var h1s = document.querySelectorAll('h1');
    if (h1s.length===0) warns.push({t:'no <h1> present', el:document.body});
    if (h1s.length>1) warns.push({t:'multiple <h1> present', el:h1s[1]});
    // Duplicate IDs
    var ids={}, dups=[];
    document.querySelectorAll('[id]').forEach(function(n){ var id=n.id; ids[id]=(ids[id]||0)+1; if(ids[id]===2) dups.push(id); });
    dups.forEach(function(id){ errs.push({t:'duplicate id #'+id, el:document.getElementById(id)}); });
    return {errs, warns};
  }
  function render(results){
    var {errs, warns} = results;
    var html = '<h4>A11y audit: <span class="'+(errs.length?'err':'ok')+'">'+(errs.length?errs.length+' errors':'0 errors')+'</span> • <span class="'+(warns.length?'warn':'ok')+'">'+warns.length+' warnings</span></h4>';
    html += '<details open><summary>Errors</summary><ol>'+ (errs.length?errs.map(function(r){return '<li class="err">'+r.t+'</li>'}).join(''):'<li class="ok">None</li>') +'</ol></details>';
    html += '<details><summary>Warnings</summary><ol>'+ (warns.length?warns.map(function(r){return '<li class="warn">'+r.t+'</li>'}).join(''):'<li class="ok">None</li>') +'</ol></details>';
    html += '<div style="opacity:.7;margin-top:6px">Open console to see elements. (Click any list item after running `window.__qa.inspect(index, type)`.)</div>';
    var box = overlay(html);
    // Expose helpers
    window.__qa = {
      errs, warns,
      inspect: function(i, type){ var arr = (type==='warn'?warns:errs); console.log(arr[i]); arr[i] && arr[i].el && console.dir(arr[i].el); arr[i]?.el?.scrollIntoView({behavior:'smooth', block:'center'}); }
    };
    // Also log to console with elements
    if (errs.length || warns.length){
      console.group('A11y audit');
      errs.forEach(function(r,i){ console.error('[ERR '+i+']', r.t, r.el); });
      warns.forEach(function(r,i){ console.warn('[WARN '+i+']', r.t, r.el); });
      console.groupEnd();
    } else {
      console.info('A11y audit: clean ✅');
    }
  }
  if (new URLSearchParams(location.search).get('qa')==='a11y'){
    document.addEventListener('DOMContentLoaded', function(){ render(audit()); });
  }
})();
</script>
