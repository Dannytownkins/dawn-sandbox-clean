{% comment %}
  Mini cart drawer

  Usage:
  {% render 'cart-drawer' %}
{% endcomment %}

<div id="cart-drawer" class="cart-drawer" hidden aria-hidden="true">
  <div class="cart-drawer__panel" role="dialog" aria-modal="true" aria-label="Shopping cart">
    <div class="cart-drawer__header">
      <h2 class="cart-drawer__heading">Your Cart</h2>
      <button type="button" class="cart-drawer__close" data-close-cart aria-label="Close cart">
        <svg width="20" height="20" viewBox="0 0 20 20" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M15 5L5 15M5 5l10 10"/>
        </svg>
      </button>
    </div>

    {% render 'cart-progress' %}

    <div class="cart-drawer__body">
      {% if cart.item_count == 0 %}
        <div class="cart-drawer__empty">
          <p>Your cart is empty</p>
          <a href="{{ routes.all_products_collection_url }}" class="btn btn--primary" data-close-cart>Start Shopping</a>
        </div>
      {% else %}
        <div class="cart-drawer__items">
          {% for item in cart.items %}
            <div class="cart-line" data-line-index="{{ forloop.index }}">
              {% if item.image %}
                <img
                  src="{{ item.image | image_url: width: 100 }}"
                  alt="{{ item.image.alt | escape }}"
                  width="60"
                  height="60"
                  loading="lazy"
                  class="cart-line__image"
                >
              {% endif %}
              <div class="cart-line__body">
                <a href="{{ item.url }}" class="cart-line__title">{{ item.product.title }}</a>
                {% unless item.product.has_only_default_variant %}
                  <div class="cart-line__variant">{{ item.variant.title }}</div>
                {% endunless %}
                <div class="cart-drawer__qty" data-line="{{ forloop.index }}">
                  <button type="button" class="qty__btn" data-qty="-1" data-line="{{ forloop.index }}" aria-label="Decrease">âˆ’</button>
                  <input class="qty__input" name="updates[{{ item.key }}]" value="{{ item.quantity }}" inputmode="numeric">
                  <button type="button" class="qty__btn" data-qty="+1" data-line="{{ forloop.index }}" aria-label="Increase">+</button>
                  <a class="cart-drawer__remove" href="{{ routes.cart_change_url }}?line={{ forloop.index }}&quantity=0" aria-label="Remove">ðŸ—‘</a>
                </div>
                <div class="cart-line__price">{{ item.final_line_price | money }}</div>
              </div>
            </div>
          {% endfor %}
        </div>

        {% render 'mini-cart-upsells' %}

        {% render 'cart-cross-sell' %}

        {% if cart.items.size > 0 and recommendations_performed != true %}
        {% assign recommendations_performed = true %}

        <div class="cart-drawer__recommendations"> {% for product in collections.all.products limit: 2 %} {% render 'card-product', card_product: product, section_id: 'cart-drawer-recs' %} {% endfor %} </div> {% endif %}

        {%- comment -%} removed trustbar/trust-badges from cart drawer {%- endcomment -%}

        {% render 'cart-note' %}

        {% render 'cart-cta-extras' %}

        <div class="cart-drawer__footer">
          {% render 'discount-code-inline' %}
          <div class="cart-subtotal">
            <span>Subtotal</span>
            <span class="cart-subtotal__amount">{{ cart.total_price | money }}</span>
          </div>
          <p class="cart-drawer__note">Taxes and shipping calculated at checkout</p>
          <a href="{{ routes.cart_url }}" class="btn btn--secondary btn--full-width">View Cart</a>
          <button
            type="submit"
            name="checkout"
            form="cart-drawer-form"
            class="btn btn--primary btn--full-width"
            data-cta="begin-checkout"
          >
            Checkout
          </button>
        </div>

        <form action="{{ routes.cart_url }}" method="post" id="cart-drawer-form" novalidate>
          <input type="hidden" name="checkout">
        </form>
      {% endif %}
    </div>
  </div>
  <div class="cart-drawer__overlay" data-close-cart></div>
</div>

<style>
/* ===== CART DRAWER SCOPED STYLES ===== */
/* Dark theme base */
#cart-drawer, .cart-drawer {
  color: #fff;
  background: #0a0a0a;
}
#cart-drawer *, .cart-drawer * {
  color: inherit;
}

/* Kill white slabs: product cards transparent on dark */
#cart-drawer .card,
#cart-drawer .product-card,
#cart-drawer .collection-card,
#cart-drawer .article-card,
.cart-drawer .card,
.cart-drawer .product-card,
.cart-drawer .collection-card,
.cart-drawer .article-card {
  background: transparent !important;
  box-shadow: none !important;
  border: 1px solid rgba(255,255,255,0.08);
  border-radius: 12px;
}

/* Titles/prices readable on dark */
#cart-drawer .price,
.cart-drawer .price { color: #fff; opacity: 0.92; }
#cart-drawer .card__title,
.cart-drawer .card__title { color: #fff; }

/* Images: contained, rounded */
#cart-drawer .card__media img,
#cart-drawer .product-card__media img,
.cart-drawer .card__media img,
.cart-drawer .product-card__media img {
  display: block;
  width: 100%;
  height: auto;
  border-radius: 10px;
  background: transparent;
}

/* Buttons: yellow fill, black stroke, no halo INSIDE drawer only */
#cart-drawer .button,
#cart-drawer .btn,
.cart-drawer .button,
.cart-drawer .btn {
  background-color: #ecd96c !important;
  border: 2px solid #000 !important;
  background-clip: border-box !important;
  border-radius: 9999px !important;
  color: #000 !important;
  box-shadow: 0 6px 12px rgba(0,0,0,.25) !important;
}
#cart-drawer .button::before,
#cart-drawer .button::after,
#cart-drawer .btn::before,
#cart-drawer .btn::after,
.cart-drawer .button::before,
.cart-drawer .button::after,
.cart-drawer .btn::before,
.cart-drawer .btn::after {
  display: none !important;
}

/* Button alignment */
#cart-drawer .buttons,
#cart-drawer .button-row,
#cart-drawer .card__actions,
.cart-drawer .buttons,
.cart-drawer .button-row,
.cart-drawer .card__actions {
  display: flex;
  gap: .5rem;
  flex-wrap: wrap;
  justify-content: flex-start;
}

/* Hide duplicate CTAs in upsells (keep primary only) */
#cart-drawer .card .button--secondary,
#cart-drawer .card .quick-add,
.cart-drawer .card .button--secondary,
.cart-drawer .card .quick-add {
  display: none !important;
}

/* Free shipping progress bar */
#cart-drawer .progress,
#cart-drawer .cart-progress__bar,
.cart-drawer .progress,
.cart-drawer .cart-progress__bar {
  background: rgba(255,255,255,.12);
  border-radius: 9999px;
  overflow: hidden;
}
#cart-drawer .progress__bar,
#cart-drawer .cart-progress__bar span,
.cart-drawer .progress__bar,
.cart-drawer .cart-progress__bar span {
  background: #ecd96c !important;
}

/* Prevent oversized white blocks in upsells */
#cart-drawer .upsell-grid .card__content,
#cart-drawer .xsell .card,
.cart-drawer .upsell-grid .card__content,
.cart-drawer .xsell .card {
  background: transparent !important;
}

/* Typography consistency */
#cart-drawer h1,
#cart-drawer h2,
#cart-drawer h3,
#cart-drawer h4,
.cart-drawer h1,
.cart-drawer h2,
.cart-drawer h3,
.cart-drawer h4 {
  color: #fff;
}

/* Drawer content spacing */
#cart-drawer .cart-drawer__body,
.cart-drawer .cart-drawer__body {
  padding: 16px 16px 24px;
}
</style>

<script>
document.addEventListener('click', async (e) => {
  const btn = e.target.closest('.qty__btn');
  if (!btn) return;

  const line = Number(btn.dataset.line);
  const delta = btn.dataset.qty === '+1' ? 1 : -1;
  const input = btn.parentElement.querySelector('.qty__input');
  const next = Math.max(0, parseInt(input.value || '1', 10) + delta);

  input.value = next;

  // Update Shopify cart for this line
  await fetch('{{ routes.cart_change_url }}', {
    method: 'POST',
    headers: { 'Content-Type':'application/json', 'Accept':'application/json' },
    body: JSON.stringify({ line, quantity: next })
  }).catch(()=>{});

  // Refresh UI (simple + reliable)
  location.reload();
});
</script>
